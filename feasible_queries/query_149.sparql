
PREFIX  dc:   <http://purl.org/dc/elements/1.1/>
PREFIX  :     <http://dbpedia.org/resource/>
PREFIX  dbpedia2: <http://dbpedia.org/property/>
PREFIX  dbpedia-owl: <http://dbpedia.org/ontology/>
PREFIX  foaf: <http://xmlns.com/foaf/0.1/>
PREFIX  rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX  owl:  <http://www.w3.org/2002/07/owl#>
PREFIX  xsd:  <http://www.w3.org/2001/XMLSchema#>
PREFIX  dbpedia: <http://dbpedia.org/>
PREFIX  rdf:  <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX  dbpprop: <http://dbpedia.org/property/>
PREFIX  skos: <http://www.w3.org/2004/02/skos/core#>

SELECT DISTINCT  ?actor1 ?actor2
WHERE
  {
      { ?actor1 dbpedia-owl:partner ?actor2 . ?actor1 rdf:type dbpedia-owl:Actor .
        ?actor2 rdf:type dbpedia-owl:Actor . ?pelicula1 dbpedia2:starring ?actor1 .
        ?pelicula1 dbpedia2:starring ?actor2 .
        ?pelicula2 dbpedia2:starring ?actor1 .
        ?pelicula2 dbpedia2:starring ?actor2 . }
    UNION
      { ?actor1 dbpedia-owl:spouse ?actor2 . ?actor1 rdf:type dbpedia-owl:Actor .
        ?actor2 rdf:type dbpedia-owl:Actor . ?pelicula1 dbpedia2:starring ?actor1 .
        ?pelicula1 dbpedia2:starring ?actor2 .
        ?pelicula2 dbpedia2:starring ?actor1 .
        ?pelicula2 dbpedia2:starring ?actor2 . }
    FILTER ( ?pelicula1 != ?pelicula2 )
  }
ORDER BY ?actor1
